#!/bin/bash

function todo() {
	UNDER="_"
	for i in "${1}"/*
	do
		if test -d "${i}" #Comprueba si  es directorio
		then
			if [[ $i =~ $PAT ]] #Comprueba si el directorio es candidato a cambios
			then
				#statements
				VAR=$(echo $i | awk '{
					gsub(/Ñ/, "N", $0)
					gsub(/ñ/, "n", $0)
					gsub(/á/, "a", $0)
					gsub(/é/, "e", $0)
					gsub(/í/, "i", $0)
					gsub(/ó/, "o", $0)
					gsub(/ú/, "u", $0)
					gsub(/ /, "_", $0)
					print $0
				}')
				COUNTER=0;
				VARAUX=$VAR
				
				while [[ -d $VARAUX ]]; do #Comprueba si ya existe el nombre
					#statements
					COUNTER=$[$COUNTER +1]
					VARAUX=$VAR$UNDER$COUNTER
				done
				VAR=$VARAUX
				if [[ $2 == 1 ]]; then #n=1 solo lista los directorios a cambiar
					echo "$i to $VAR"
				elif [[ $2 == 2 ]]; then #n=2 realiza los cambios
					mv "${i}" "${VAR}"
					echo "Changed $i to $VAR"
					i=$VAR
				else # si n!= 1 o 2 no hace nada y imprime un mensaje de error
					echo " Invalid argument n= $2 (n is 1 or 2)" 
				fi
			fi
			todo "${i}" $2
			continue
		fi
		if [[ $i =~ $PAT ]] #si el archivo es candidato a cambios
		then
			#statements
			VAR=$(echo $i | awk '{
				gsub(/Ñ/, "N", $0)
				gsub(/ñ/, "n", $0)
				gsub(/á/, "a", $0)
				gsub(/é/, "e", $0)
				gsub(/í/, "i", $0)
				gsub(/ó/, "o", $0)
				gsub(/ú/, "u", $0)
				gsub(/ /, "_", $0)
				print $0
			}')
			COUNTER=0;
			VARAUX=$VAR
			if echo "$VARAUX" | grep -q "\." #si el archivo tiene un punto
        	then
            	extension=".${VAR#*.}"
            	NAME="${VAR%%.*}"
            	while [[ -f $VARAUX ]]; do #compruba si existe el nombre
				#statements
				COUNTER=$[$COUNTER +1]
				VARAUX=$NAME$UNDER$COUNTER$extension
				done

            else
            	while [[ -f $VARAUX ]]; do #comprueba si existe el nombre
					#statements
					COUNTER=$[$COUNTER +1]
					VARAUX=$VAR$UNDER$COUNTER
				done

        	fi

			VAR=$VARAUX
			if [[ $2 == 1 ]]; then #n=1 lista los cambios
				#statements
				echo "$i to $VAR"
			elif [[ $2 == 2 ]]; then #n=2 Realiza los cambios
				#statements
				mv "${i}" "${VAR}"
				echo "Changed $i to $VAR"
			else
				echo "Invalid argument n= $2 (n is 1 or 2)"
			fi
		fi
	done	
}
case $# in #Comprueba los argumentos
	0)
		DIR=`pwd`
		N=1;;
	1) 
		DIR="$1"
		N=1 ;;
	2) 
		DIR=$1
		N=$2
esac

PAT="[áéíóúñÑ ]" #Patron
todo "${DIR}" $N #Funcion que realiza el cambio a formato UNIX

